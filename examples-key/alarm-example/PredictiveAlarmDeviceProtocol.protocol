typestate PredictiveAlarmDeviceProtocol {

  DISC = {
    void connect(): CONN,
    drop: end
  }

  CONN = {
    void notify(double): NOTIFIED,
    boolean isTrainingNeeded(): <true: DATA_VALIDATION, false: CONN>,
    boolean predictiveThresholdCheck(): <true: ALERT, false: CONN>,
    void setThreshold(double): CONN,
    void setInferenceTimeStep(String): CONN,
    void disconnect(): DISC
  }

  NOTIFIED =  {
    boolean thresholdCheck(): <true: ALERT, false: CONN>
  }

  ALERT = {
    void alert(): CONN
  }

  DATA_VALIDATION = {
    boolean dataValidation(): <true: TRAIN, false: DATA_PRUNING>
  }

  DATA_PRUNING = {
    void pruneData(): CONN
  }

  TRAIN = {
    void train(): MODEL_EVALUATION
  }

  MODEL_EVALUATION = {
    boolean modelEvaluation(): <true: CONN, false: UPDATE_HYPERPARAMS>
  }

  UPDATE_HYPERPARAMS = {
    void modelTuning(String): TRAIN
  }

}
